{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "597910a1",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-01-31T01:29:21.128330Z",
     "iopub.status.busy": "2025-01-31T01:29:21.127910Z",
     "iopub.status.idle": "2025-01-31T01:29:22.085537Z",
     "shell.execute_reply": "2025-01-31T01:29:22.084393Z"
    },
    "papermill": {
     "duration": 0.964198,
     "end_time": "2025-01-31T01:29:22.087618",
     "exception": false,
     "start_time": "2025-01-31T01:29:21.123420",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/titanic/train.csv\n",
      "/kaggle/input/titanic/test.csv\n",
      "/kaggle/input/titanic/gender_submission.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e2efcb4",
   "metadata": {
    "papermill": {
     "duration": 0.002059,
     "end_time": "2025-01-31T01:29:22.092589",
     "exception": false,
     "start_time": "2025-01-31T01:29:22.090530",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Loading the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "450261d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-31T01:29:22.098595Z",
     "iopub.status.busy": "2025-01-31T01:29:22.098008Z",
     "iopub.status.idle": "2025-01-31T01:29:22.136375Z",
     "shell.execute_reply": "2025-01-31T01:29:22.135385Z"
    },
    "papermill": {
     "duration": 0.043855,
     "end_time": "2025-01-31T01:29:22.138519",
     "exception": false,
     "start_time": "2025-01-31T01:29:22.094664",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_train = pd.read_csv('/kaggle/input/titanic/train.csv')\n",
    "df_test = pd.read_csv('/kaggle/input/titanic/test.csv')\n",
    "df_gender = pd.read_csv('/kaggle/input/titanic/gender_submission.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "afa51bf8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-31T01:29:22.144767Z",
     "iopub.status.busy": "2025-01-31T01:29:22.144391Z",
     "iopub.status.idle": "2025-01-31T01:29:22.176531Z",
     "shell.execute_reply": "2025-01-31T01:29:22.175382Z"
    },
    "papermill": {
     "duration": 0.038544,
     "end_time": "2025-01-31T01:29:22.179740",
     "exception": false,
     "start_time": "2025-01-31T01:29:22.141196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    object \n",
      " 5   Age          714 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df_train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "699cd25c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-31T01:29:22.186062Z",
     "iopub.status.busy": "2025-01-31T01:29:22.185636Z",
     "iopub.status.idle": "2025-01-31T01:29:22.197156Z",
     "shell.execute_reply": "2025-01-31T01:29:22.196105Z"
    },
    "papermill": {
     "duration": 0.016508,
     "end_time": "2025-01-31T01:29:22.198929",
     "exception": false,
     "start_time": "2025-01-31T01:29:22.182421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 11 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Pclass       418 non-null    int64  \n",
      " 2   Name         418 non-null    object \n",
      " 3   Sex          418 non-null    object \n",
      " 4   Age          332 non-null    float64\n",
      " 5   SibSp        418 non-null    int64  \n",
      " 6   Parch        418 non-null    int64  \n",
      " 7   Ticket       418 non-null    object \n",
      " 8   Fare         417 non-null    float64\n",
      " 9   Cabin        91 non-null     object \n",
      " 10  Embarked     418 non-null    object \n",
      "dtypes: float64(2), int64(4), object(5)\n",
      "memory usage: 36.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df_test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "59d673c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-31T01:29:22.205287Z",
     "iopub.status.busy": "2025-01-31T01:29:22.204909Z",
     "iopub.status.idle": "2025-01-31T01:29:22.215334Z",
     "shell.execute_reply": "2025-01-31T01:29:22.214031Z"
    },
    "papermill": {
     "duration": 0.01565,
     "end_time": "2025-01-31T01:29:22.217196",
     "exception": false,
     "start_time": "2025-01-31T01:29:22.201546",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 2 columns):\n",
      " #   Column       Non-Null Count  Dtype\n",
      "---  ------       --------------  -----\n",
      " 0   PassengerId  418 non-null    int64\n",
      " 1   Survived     418 non-null    int64\n",
      "dtypes: int64(2)\n",
      "memory usage: 6.7 KB\n"
     ]
    }
   ],
   "source": [
    "df_gender.info()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30839,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.810214,
   "end_time": "2025-01-31T01:29:22.940772",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-31T01:29:18.130558",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
